{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Welcome","react_default","a","createElement","className","Link","to","href","style","margin","AGE","Age","map","age","key","IDENTITY","Identity","identity","GROUP","Group","group","type","STATUS","Status","status","NEED","Need","App","HashRouter","Route","exact","path","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4eb0dcf.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from 'react-router-dom'\n\nimport './App.css'\n\nconst Welcome = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      歡迎\n    </h1>\n    <p>\n      ～就業小精靈，工作一點靈～\n    </p>\n    <hr className='ui hidden divider' />\n    <Link to='/age' className='ui large teal fluid button'>\n      開始\n      <i className='right chevron icon' />\n    </Link>\n    <div className='ui horizontal section divider'>\n      或\n    </div>\n    <a href=''>\n      直接前往就業通網站\n      <i className='right external alternate icon' style={{margin: '0 0 0 .25rem'}} />\n    </a>\n  </div>\n)\n\nconst AGE = [\n  '15 - 29',\n  '30 - 44',\n  '45 - 64',\n  '65 -'\n]\n\nconst Age = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      我今年\n    </h1>\n    <hr className='ui hidden divider' />\n    {AGE.map((age) => (\n      <Link key={age} to='/identity' className='ui large basic fluid teal button'>\n        {age} 歲\n      </Link>\n    ))}\n    <hr className='ui section divider' />\n    <Link to='/'>\n      <i className='left chevron icon' />\n      回上一步\n    </Link>\n  </div>\n)\n\nconst IDENTITY = [\n  '學生',\n  '剛畢業',\n  '一般勞工',\n  '創業中',\n  '企業主'\n]\n\nconst Identity = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      現在是\n    </h1>\n    <hr className='ui hidden divider' />\n    {IDENTITY.map((identity) => (\n      <Link key={identity} to='/group' className='ui large basic fluid teal button'>\n        {identity}\n      </Link>\n    ))}\n    <hr className='ui section divider' />\n    <Link to='/age'>\n      <i className='left chevron icon' />\n      回上一步\n    </Link>\n  </div>\n)\n\nconst GROUP = [\n  '女性',\n  '身心障礙者',\n  '原住民',\n  '新住民',\n  '更生人'\n]\n\nconst Group = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      擁有這些身份\n    </h1>\n    <hr className='ui hidden divider' />\n    <form className='ui form'>\n      {GROUP.map((group) => (\n        <div className='field' key={group}>\n          <div className='ui checkbox'>\n            <input type='checkbox' />\n            <label>{group}</label>\n          </div>\n        </div>\n      ))}\n    </form>\n    <hr className='ui hidden divider' />\n    <Link to='/status' className='ui large fluid teal button'>\n      選好了\n    </Link>\n    <hr className='ui section divider' />\n    <Link to='/identity'>\n      <i className='left chevron icon' />\n      回上一步\n    </Link>\n  </div>\n)\n\nconst STATUS = [\n  '失業了',\n  '生病或受傷',\n  '有了小孩'\n]\n\nconst Status = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      目前正在\n    </h1>\n    <hr className='ui hidden divider' />\n    <form className='ui form'>\n      {STATUS.map((status) => (\n        <div className='field' key={status}>\n          <div className='ui checkbox'>\n            <input type='checkbox' />\n            <label>{status}</label>\n          </div>\n        </div>\n      ))}\n    </form>\n    <hr className='ui hidden divider' />\n    <Link to='/need' className='ui large fluid teal button'>\n      選好了\n    </Link>\n    <hr className='ui section divider' />\n    <Link to='/group'>\n      <i className='left chevron icon' />\n      回上一步\n    </Link>\n  </div>\n)\n\nconst NEED = [\n  '找工作',\n  '找錢',\n  '練功'\n]\n\nconst Need = () => (\n  <div className='ui very padded segment'>\n    <h1 className='ui header'>\n      我想\n    </h1>\n    <hr className='ui hidden divider' />\n    {NEED.map((identity) => (\n      <Link key={identity} to='/' className='ui large basic fluid teal button'>\n        {identity}\n      </Link>\n    ))}\n    <hr className='ui section divider' />\n    <Link to='/status'>\n      <i className='left chevron icon' />\n      回上一步\n    </Link>\n  </div>\n)\n\n\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Router>\n        <div className='App'>\n          <Route exact path='/' component={Welcome} />\n          <Route exact path='/age' component={Age} />\n          <Route exact path='/identity' component={Identity} />\n          <Route exact path='/group' component={Group} />\n          <Route exact path='/status' component={Status} />\n          <Route exact path='/need' component={Need} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}